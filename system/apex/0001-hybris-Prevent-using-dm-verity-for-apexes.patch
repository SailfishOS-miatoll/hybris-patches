From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Matti=20Lehtim=C3=A4ki?= <matti.lehtimaki@jolla.com>
Date: Wed, 11 Oct 2023 15:43:59 +0000
Subject: [PATCH] (hybris) Prevent using dm-verity for apexes

Patch apexd.rc to use apexd from /usr/libexec/droid-hybris/system/bin/.
Disable the forced reboot to make shutdown work.

Change-Id: Ie537eb6458022abf581d66dfc6f1445029cbedd9
---
 apexd/apexd.cpp | 3 ++-
 apexd/apexd.rc  | 9 +++++----
 2 files changed, 7 insertions(+), 5 deletions(-)

diff --git a/apexd/apexd.cpp b/apexd/apexd.cpp
index 5cf19ad7f4b37123615164e97be6716b42b256e6..f70840830f3a5ebdf017adb1ada7a62b056689d7 100644
--- a/apexd/apexd.cpp
+++ b/apexd/apexd.cpp
@@ -558,7 +558,7 @@ Result<MountedApexData> MountPackageImpl(const ApexFile& apex,
   // dm-verity because they are already in the dm-verity protected partition;
   // system. However, note that we don't skip verification to ensure that APEXes
   // are correctly signed.
-  const bool mount_on_verity = !instance.IsPreInstalledApex(apex) ||
+  bool mount_on_verity = !instance.IsPreInstalledApex(apex) ||
                                // decompressed apexes are on /data
                                instance.IsDecompressedApex(apex) ||
                                // block apexes are from host
@@ -566,6 +566,7 @@ Result<MountedApexData> MountPackageImpl(const ApexFile& apex,
 
   DmVerityDevice verity_dev;
   loop::LoopbackDeviceUniqueFd loop_for_hash;
+  mount_on_verity = false;
   if (mount_on_verity) {
     std::string hash_device = loopback_device.name;
     if (verity_data->desc->tree_size == 0) {
diff --git a/apexd/apexd.rc b/apexd/apexd.rc
index f64688fbf0a4c4e63c522d187658721fce99c5b2..57b2fbe90218be61617b71b6a649b50c4a8d3c0e 100644
--- a/apexd/apexd.rc
+++ b/apexd/apexd.rc
@@ -1,20 +1,21 @@
-service apexd /system/bin/apexd
+service apexd /usr/libexec/droid-hybris/system/bin/apexd
     interface aidl apexservice
     class core
     user root
     group system
     oneshot
     disabled # does not start with the core class
-    reboot_on_failure reboot,apexd-failed
+    # Disabled for hybris shutdown to work correctly
+    #reboot_on_failure reboot,apexd-failed
 
-service apexd-bootstrap /system/bin/apexd --bootstrap
+service apexd-bootstrap /usr/libexec/droid-hybris/system/bin/apexd --bootstrap
     user root
     group system
     oneshot
     disabled
     reboot_on_failure reboot,bootloader,bootstrap-apexd-failed
 
-service apexd-snapshotde /system/bin/apexd --snapshotde
+service apexd-snapshotde /usr/libexec/droid-hybris/system/bin/apexd --snapshotde
     user root
     group system
     oneshot
