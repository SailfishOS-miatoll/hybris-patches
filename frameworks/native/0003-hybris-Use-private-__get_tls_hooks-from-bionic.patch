From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: David Greaves <david.greaves@jollamobile.com>
Date: Tue, 25 Nov 2014 14:55:27 +0100
Subject: [PATCH] (hybris) Use private __get_tls_hooks from bionic

Change-Id: I38a4ea6d8561ab7da5dfedeeba16b84ee493051e
Signed-off-by: David Greaves <david.greaves@jollamobile.com>
Signed-off-by: Franz-Josef Haider <franz.haider@jolla.com>
---
 opengl/libs/EGL/egl.cpp |  2 +-
 opengl/libs/hooks.h     | 13 ++++---------
 2 files changed, 5 insertions(+), 10 deletions(-)

diff --git a/opengl/libs/EGL/egl.cpp b/opengl/libs/EGL/egl.cpp
index e5b9e14bd5fef60e53f2aeba0d2bfc022359b3ec..084fadd5dc22ab2f5fc7796944163eac5653077c 100644
--- a/opengl/libs/EGL/egl.cpp
+++ b/opengl/libs/EGL/egl.cpp
@@ -184,7 +184,7 @@ void gl_unimplemented() {
 void gl_noop() {}
 
 void setGlThreadSpecific(gl_hooks_t const* value) {
-    gl_hooks_t const* volatile* tls_hooks = get_tls_hooks();
+    gl_hooks_t const* volatile* tls_hooks = const_cast<gl_hooks_t const **>(reinterpret_cast<gl_hooks_t**>(__get_tls_hooks()));
     tls_hooks[TLS_SLOT_OPENGL_API] = value;
 }
 
diff --git a/opengl/libs/hooks.h b/opengl/libs/hooks.h
index 86fec21bae5e94f10950cfd8842ca1103c2bd37a..127925383837dce01cc30132bc15b55bc87eeda3 100644
--- a/opengl/libs/hooks.h
+++ b/opengl/libs/hooks.h
@@ -34,7 +34,7 @@
 #include <GLES3/gl32.h>
 
 // set to 1 for debugging
-#define USE_SLOW_BINDING    0
+#define USE_SLOW_BINDING    1
 
 #undef NELEM
 #define NELEM(x)            (sizeof(x)/sizeof(*(x)))
@@ -80,16 +80,11 @@ struct gl_hooks_t {
 
 EGLAPI void setGlThreadSpecific(gl_hooks_t const *value);
 
-// We have a dedicated TLS slot in bionic
-inline gl_hooks_t const * volatile * get_tls_hooks() {
-    volatile void *tls_base = __get_tls();
-    gl_hooks_t const * volatile * tls_hooks =
-            reinterpret_cast<gl_hooks_t const * volatile *>(tls_base);
-    return tls_hooks;
-}
+// hybris modified bionic libc provides this
+extern "C" void **__get_tls_hooks();
 
 inline EGLAPI gl_hooks_t const* getGlThreadSpecific() {
-    gl_hooks_t const * volatile * tls_hooks = get_tls_hooks();
+    gl_hooks_t const ** tls_hooks = const_cast<gl_hooks_t const**>(reinterpret_cast<gl_hooks_t**>(__get_tls_hooks()));
     gl_hooks_t const* hooks = tls_hooks[TLS_SLOT_OPENGL_API];
     return hooks;
 }
